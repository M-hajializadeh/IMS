@page "/inventory_console"
@attribute [Authorize(Policy = "WorkerOnly")]
<br />
@if (!string.IsNullOrWhiteSpace(workerName))
{
    <div class="row">
        <div class="col-7">
            <h3>صفحه مدیریت انباردار</h3>
        </div>
        <div class="col-2"><label for="worker">نام صندوق دار:</label></div>
        <div class="col-3">
            <div class="form-group">
                <input id="worker" class="form-control" @bind-value="workerName" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-4">
            <SelectedProductForCheckOut OnProductSelected="SelectProduct"></SelectedProductForCheckOut>
            <CheckOutProductComponent WorkerName="@workerName" SelectedProduct="selectedProduct" OnProductCheckOut="CheckOutProduct"></CheckOutProductComponent>
        </div>
        <div class="col-8">
            <TodayTransactionsComponent @ref="transactionComponent"></TodayTransactionsComponent>
        </div>

    </div>
}

@code {
    private TodayTransactionsComponent transactionComponent;
    private Product selectedProduct;
    private string workerName;
    // private string RecivedProductEmployee;

    [CascadingParameter]
    private Task<AuthenticationState> _authState{ get; set; }
    private AuthenticationState authState;

    protected override async Task OnInitializedAsync()
    {
        authState = await _authState;
        workerName = authState.User.Identity.Name;
    }
    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            transactionComponent.LoadTransactions(workerName);
        }
    }
    private void SelectProduct(Product product)
    {
        selectedProduct = product;
    }
    private void CheckOutProduct(Product product)
    {
        transactionComponent.LoadTransactions(workerName);
    }
}
